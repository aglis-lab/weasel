// Weasel Library //
extern fun generateArray(count int) *int {}
extern fun initKernel(kernelName *byte) {}
extern fun initArgument(arr *int, size int, type int) {}
extern fun run(gSize int, lSize int) {}
extern fun destroy() {}

extern fun load(arr *int, size int) {}
extern fun release(arr *int) {}

extern fun printf(msg *byte, param ...*int) int {}
// End of Weasel Library //

// Weasel Parallel Library //
parallel
fun _Z13get_global_idj(i int) long {}

parallel
inline fun getGlobalId(i int) long {
    return _Z13get_global_idj(i)
}
// End of Weasel Parallel Library

// Relu of Neural Network
parallel kernel
fun relu(x *int) {
    let i long = getGlobalId(0)

    if (x[i] < 0) {
        x[i] = 0
    }
}

// Main Function
fun main()
{
    let a *int = generateArray(100)

    relu(a)

    load(a, 100)

    printf("Index 10 is %d", a[10])
}
